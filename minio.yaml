---
# Source: minio/templates/persistentvolume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "minio-data-minio-0"
  labels:
    app: minio
spec:
capacity:
    storage: "20Gi"
accessModes:
    - ReadWriteOnce
persistentVolumeReclaimPolicy: Retain
claimRef:
    namespace: backbone
    name: "minio-data-minio-0"
---
# Source: minio/templates/persistentvolume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "minio-data-minio-1"
  labels:
    app: minio
spec:
capacity:
    storage: "20Gi"
accessModes:
    - ReadWriteOnce
persistentVolumeReclaimPolicy: Retain
claimRef:
    namespace: backbone
    name: "minio-data-minio-1"
---
# Source: minio/templates/persistentvolume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "minio-data-minio-2"
  labels:
    app: minio
spec:
capacity:
    storage: "20Gi"
accessModes:
    - ReadWriteOnce
persistentVolumeReclaimPolicy: Retain
claimRef:
    namespace: backbone
    name: "minio-data-minio-2"
---
# Source: minio/templates/persistentvolume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "minio-data-minio-3"
  labels:
    app: minio
spec:
capacity:
    storage: "20Gi"
accessModes:
    - ReadWriteOnce
persistentVolumeReclaimPolicy: Retain
claimRef:
    namespace: backbone
    name: "minio-data-minio-3"
---
# Source: minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: backbone
  labels:
    app: minio
spec:
  type: ClusterIP
  ports:
    - name: minio
      port: 9000
      targetPort: minio
      nodePort: null
  selector:
    app: minio
---
# Source: minio/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio-headless
  namespace: backbone
  labels:
    app: minio
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: minio
      port: 9000
      targetPort: minio
  selector:
    app: minio
---
# Source: minio/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: backbone
  labels:
    app: minio
spec:
  selector:
    matchLabels:
      app: minio
  serviceName: minio-headless
  replicas: 4
  podManagementPolicy: Parallel
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: minio
    spec:

      securityContext:
        fsGroup: 1001
      containers:
        - name: minio
          image: docker.io/bitnami/minio:2020.6.3-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MINIO_DISTRIBUTED_MODE_ENABLED
              value: "yes"
            - name: MINIO_SKIP_CLIENT
              value: "yes"
            - name: MINIO_DISTRIBUTED_NODES
              value: minio-0.minio-headless.backbone.svc.cluster.local,minio-1.minio-headless.backbone.svc.cluster.local,minio-2.minio-headless.backbone.svc.cluster.local,minio-3.minio-headless.backbone.svc.cluster.local,
            - name: MINIO_FORCE_NEW_KEYS
              value: "no"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: secretkey
            - name: MINIO_BROWSER
              value: "off"
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: jwt
          ports:
            - name: minio
              containerPort: 9000
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              path: /minio/health/live
              port: minio
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
            tcpSocket:
              port: minio
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - name: minio-data
              mountPath: /data
      volumes:
  volumeClaimTemplates:
    - metadata:
        name: minio-data
        labels:
          app: minio
      spec:
        accessModes:
          - ReadWriteOnce

        resources:
          requests:
            storage: "20Gi"
---
# Source: minio/templates/ingress.yaml
# ingress.yaml---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: minio
  namespace: backbone
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 8m

  labels:
    app: minio
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: minio
          servicePort: 9000
        path: /minio
---

